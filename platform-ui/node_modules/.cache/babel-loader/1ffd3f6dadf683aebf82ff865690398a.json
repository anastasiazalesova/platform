{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { throttle } from 'lodash';\n\nfunction useDocumentScrollThrottled(callback) {\n  const [, setScrollPosition] = useState(0);\n  let previousScrollTop = 0;\n  const handleDocumentScrollThrottled = throttle(handleDocumentScroll, 250);\n\n  function handleDocumentScroll() {\n    const {\n      scrollTop: currentScrollTop\n    } = document.documentElement || document.body;\n    setScrollPosition(previousPosition => {\n      previousScrollTop = previousPosition;\n      return currentScrollTop;\n    });\n    callback({\n      previousScrollTop,\n      currentScrollTop\n    });\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleDocumentScrollThrottled);\n    return () => window.removeEventListener('scroll', handleDocumentScrollThrottled);\n  }, []);\n}\n\nexport default useDocumentScrollThrottled;","map":{"version":3,"sources":["/Users/a17839534/jsProjects/platform-ui/src/useDocumentScrollThrottled.js"],"names":["useEffect","useState","throttle","useDocumentScrollThrottled","callback","setScrollPosition","previousScrollTop","handleDocumentScrollThrottled","handleDocumentScroll","scrollTop","currentScrollTop","document","documentElement","body","previousPosition","window","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,SAASC,0BAAT,CAAoCC,QAApC,EAA8C;AAC5C,QAAM,GAAGC,iBAAH,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAIK,iBAAiB,GAAG,CAAxB;AAEA,QAAMC,6BAA6B,GAAGL,QAAQ,CAACM,oBAAD,EAAuB,GAAvB,CAA9C;;AAEA,WAASA,oBAAT,GAAgC;AAC9B,UAAM;AAAEC,MAAAA,SAAS,EAAEC;AAAb,QAAkCC,QAAQ,CAACC,eAAT,IAA4BD,QAAQ,CAACE,IAA7E;AAEAR,IAAAA,iBAAiB,CAACS,gBAAgB,IAAI;AACpCR,MAAAA,iBAAiB,GAAGQ,gBAApB;AACA,aAAOJ,gBAAP;AACD,KAHgB,CAAjB;AAKAN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,iBAAF;AAAqBI,MAAAA;AAArB,KAAD,CAAR;AACD;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCT,6BAAlC;AAEA,WAAO,MACLQ,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCV,6BAArC,CADF;AAED,GALQ,EAKN,EALM,CAAT;AAMD;;AAED,eAAeJ,0BAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { throttle } from 'lodash';\n\nfunction useDocumentScrollThrottled(callback) {\n  const [, setScrollPosition] = useState(0);\n  let previousScrollTop = 0;\n\n  const handleDocumentScrollThrottled = throttle(handleDocumentScroll, 250);\n\n  function handleDocumentScroll() {\n    const { scrollTop: currentScrollTop } = document.documentElement || document.body;\n\n    setScrollPosition(previousPosition => {\n      previousScrollTop = previousPosition;\n      return currentScrollTop;\n    });\n\n    callback({ previousScrollTop, currentScrollTop });\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleDocumentScrollThrottled);\n\n    return () =>\n      window.removeEventListener('scroll', handleDocumentScrollThrottled);\n  }, []);\n}\n\nexport default useDocumentScrollThrottled;"]},"metadata":{},"sourceType":"module"}